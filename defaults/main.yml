---

# Should we write info about vpc
aws_manage_vpc_write_info   : true
aws_manage_vpc_info_path    : "/tmp/{{ aws_manage_vpc_prefix }}.yml"

## Should we load a YAML file with environments
#aws_manage_vpc_def_path     : "/tmp/myaws.yml"


## AWS access key. If not set then the value of the
## AWS_ACCESS_KEY_ID, AWS_ACCESS_KEY or EC2_ACCESS_KEY environment variable is used.
#aws_manage_access_key        : "blaaablaaa"

## AWS secret key. If not set then the value of the
## AWS_SECRET_ACCESS_KEY, AWS_SECRET_KEY, or EC2_SECRET_KEY  environment variable is used.
#aws_manage_secret_key        : "moreblabla"

# [ eu-central-1": Frankfurt, "eu-west-1": "Ireland", "us-west-2": "Oregon", "us-east-1":N. Virigina, "ap-southeast-1": Singapour]
aws_manage_region            : "{{ aws_region | default('eu-west-1') }}"

aws_manage_vpc_prefix        : "example"
## ******** VPC Config ********
## For more info check http://docs.ansible.com/ansible/ec2_vpc_module.html
aws_manage_vpc               :
      - state                : "present"
        cidr_block           : 172.31.0.0/16
        resource_tags        : { "Name": "{{ aws_manage_vpc_prefix }}_vpc" }
        region               : "{{ aws_manage_region }}"
        subnets              :
          - cidr             : 172.31.32.0/20
            az               : "eu-west-1a"
            resource_tags    : { "Name": "{{ aws_manage_vpc_prefix }}_subnet_public" }
          - cidr             : 172.31.16.0/20
            az               : "eu-west-1a"
            resource_tags    : { "Name": "{{ aws_manage_vpc_prefix }}_subnet_private" }
        internet_gateway     : yes
        route_tables         :
          - subnets          :
                               - 172.31.32.0/20
                               - 172.31.16.0/20
            routes           :
                               - dest: 0.0.0.0/0
                                 gw  : igw
aws_manage_vpc_routes        : []

## ******** Security Group config ********
## For more info check http://docs.ansible.com/ansible/ec2_group_module.html

aws_manage_vpc_id            : "{{ vpc.results[0].vpc_id }}"
aws_manage_groups            :
  - name                     : EntryPoint
    description              : HTTP/HTTPS entry servers
    region                   : "{{ aws_manage_region }}"
    vpc_id                   : "{{ aws_manage_vpc_id }}"
    rules:
      - proto                : tcp
        from_port            : 80
        to_port              : 80
        cidr_ip              : 0.0.0.0/0

      - proto                : tcp
        from_port            : 443
        to_port              : 443
        cidr_ip              : 0.0.0.0/0

      - proto                : icmp
        from_port            : -1
        to_port              : -1
        cidr_ip              : 0.0.0.0/0

  - name                     : OpenVPN
    description              : OpenVPN Server
    region                   : "{{ aws_manage_region }}"
    vpc_id                   : "{{ aws_manage_vpc_id }}"
    rules:
      - proto                : udp
        from_port            : 1194
        to_port              : 1194
        cidr_ip              : 0.0.0.0/0

      - proto                : tcp
        from_port            : 1194
        to_port              : 1194
        cidr_ip              : 0.0.0.0/0

      - proto                : icmp
        from_port            : -1
        to_port              : -1
        cidr_ip              : 0.0.0.0/0

      - proto                : tcp
        from_port            : 22
        to_port              : 22
        cidr_ip              : 0.0.0.0/0

  - name                     : PrivateNetwork
    description              : Private network with no public interface
    region                   : "{{ aws_manage_region }}"
    vpc_id                   : "{{ aws_manage_vpc_id }}"
    rules:
      - proto                : "all"
        cidr_ip              : "172.31.0.0/16"
